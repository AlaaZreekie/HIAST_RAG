{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/lib/postsApi.js"],"sourcesContent":["const API_BASE_URL =\r\n  process.env.NEXT_PUBLIC_API_URL || \"https://localhost:7187/api\";\r\n\r\n// Generic API request function for posts\r\nasync function postsApiRequest(endpoint, options = {}) {\r\n  const url = `${API_BASE_URL}/admin/posts${endpoint}`;\r\n\r\n  const defaultOptions = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Add authorization header if token exists\r\n  const token = localStorage.getItem(\"admin_token\");\r\n  if (token) {\r\n    defaultOptions.headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  // Check if user is admin before making request\r\n  const { isAdmin } = await import(\"./api.js\");\r\n  if (!isAdmin()) {\r\n    throw new Error(\"Access denied. Admin role required.\");\r\n  }\r\n\r\n  const config = {\r\n    ...defaultOptions,\r\n    ...options,\r\n    headers: {\r\n      ...defaultOptions.headers,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log(\"Making Posts API request to:\", url);\r\n    const response = await fetch(url, config);\r\n    console.log(\"Response status:\", response.status);\r\n    const data = await response.json();\r\n    console.log(\"Response data:\", data);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.Message || \"API request failed\");\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Posts API Error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Posts API functions\r\nexport const postsAPI = {\r\n  // Get all posts\r\n  async getAllPosts() {\r\n    const response = await postsApiRequest(\"/GetAllPosts\", {\r\n      method: \"GET\",\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Create new post\r\n  async createPost(postData) {\r\n    const response = await postsApiRequest(\"/CreatePost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(postData),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Update existing post\r\n  async updatePost(postData) {\r\n    const response = await postsApiRequest(\"/UpdatePost\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(postData),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Delete post\r\n  async deletePost(postId) {\r\n    const response = await postsApiRequest(\"/DeletePost\", {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify({ Id: postId }),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Add post translation\r\n  async addPostTranslation(translationData) {\r\n    const response = await postsApiRequest(\"/AddPostTranslation\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(translationData),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get posts by filter\r\n  async getPostsByFilter(filterData) {\r\n    const queryParams = new URLSearchParams();\r\n    Object.keys(filterData).forEach((key) => {\r\n      if (filterData[key] !== null && filterData[key] !== undefined) {\r\n        queryParams.append(key, filterData[key]);\r\n      }\r\n    });\r\n\r\n    const response = await postsApiRequest(\r\n      `/GetByFilter?${queryParams.toString()}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n};\r\n\r\n// Helper functions\r\nexport const formatPostDate = (dateString) => {\r\n  return new Date(dateString).toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  });\r\n};\r\n\r\nexport const getLanguageName = (languageCode) => {\r\n  const languages = {\r\n    1: \"Arabic\",\r\n    2: \"English\",\r\n    3: \"French\",\r\n    4: \"German\",\r\n  };\r\n  return languages[languageCode] || \"Unknown\";\r\n};\r\n\r\nexport const getLanguageCode = (languageName) => {\r\n  const codes = {\r\n    Arabic: 1,\r\n    English: 2,\r\n    French: 3,\r\n    German: 4,\r\n  };\r\n  return codes[languageName] || 2; // Default to English\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/lib/api.js"],"sourcesContent":["const API_BASE_URL =\r\n  process.env.NEXT_PUBLIC_API_URL || \"https://localhost:7187/api\";\r\n\r\n// API Response wrapper\r\nclass ApiResponse {\r\n  constructor(success, message, statusCode, data) {\r\n    this.success = success;\r\n    this.message = message;\r\n    this.statusCode = statusCode;\r\n    this.data = data;\r\n  }\r\n}\r\n\r\n// Generic API request function\r\nasync function apiRequest(endpoint, options = {}) {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n\r\n  const defaultOptions = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Add authorization header if token exists\r\n  const token = localStorage.getItem(\"admin_token\");\r\n  if (token) {\r\n    defaultOptions.headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  const config = {\r\n    ...defaultOptions,\r\n    ...options,\r\n    headers: {\r\n      ...defaultOptions.headers,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log(\"Making API request to:\", url);\r\n    const response = await fetch(url, config);\r\n    console.log(\"Response status:\", response.status);\r\n    const data = await response.json();\r\n    console.log(\"Response data:\", data);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || \"API request failed\");\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Authentication API functions\r\nexport const authAPI = {\r\n  // Login user\r\n  async login(email, password, rememberMe = false) {\r\n    const response = await apiRequest(\"/auth/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Email: email,\r\n        Password: password,\r\n        RememberMe: rememberMe,\r\n      }),\r\n    });\r\n\r\n    console.log(\"Login response:\", response);\r\n    // Handle the actual backend response structure\r\n    if (response.Result && response.Data?.Token?.Token) {\r\n      localStorage.setItem(\"admin_token\", response.Data.Token.Token);\r\n      console.log(\"Token set:\", response.Data.Token.Token);\r\n      localStorage.setItem(\"admin_user\", JSON.stringify(response.Data));\r\n    } else {\r\n      console.log(\"Login failed - response structure:\", {\r\n        result: response.Result,\r\n        hasData: !!response.Data,\r\n        hasToken: !!response.Data?.Token,\r\n        hasTokenToken: !!response.Data?.Token?.Token,\r\n      });\r\n    }\r\n\r\n    return response;\r\n  },\r\n\r\n  // Logout user\r\n  async logout() {\r\n    try {\r\n      await apiRequest(\"/Auth/Logout\", {\r\n        method: \"POST\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    } finally {\r\n      localStorage.removeItem(\"admin_token\");\r\n      localStorage.removeItem(\"admin_user\");\r\n    }\r\n  },\r\n\r\n  // Get current authenticated user\r\n  async getCurrentUser() {\r\n    return await apiRequest(\"/auth/GetAuthenticatedUser\", {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n\r\n  // Register new user (if needed)\r\n  async register(username, email, password) {\r\n    return await apiRequest(\"/auth/register\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Username: username,\r\n        Email: email,\r\n        Password: password,\r\n      }),\r\n    });\r\n  },\r\n};\r\n\r\n// Check if user is authenticated\r\nexport const isAuthenticated = () => {\r\n  const token = localStorage.getItem(\"admin_token\");\r\n  return !!token;\r\n};\r\n\r\n// Get current user from localStorage\r\nexport const getCurrentUserFromStorage = () => {\r\n  const userStr = localStorage.getItem(\"admin_user\");\r\n  return userStr ? JSON.parse(userStr) : null;\r\n};\r\n\r\n// Check if user has admin role\r\nexport const isAdmin = () => {\r\n  const user = getCurrentUserFromStorage();\r\n  return user?.Token?.UserRoles?.includes(\"Admin\") || false;\r\n};\r\n\r\n// Clear authentication data\r\nexport const clearAuth = () => {\r\n  localStorage.removeItem(\"admin_token\");\r\n  localStorage.removeItem(\"admin_user\");\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/lib/adminAuth.js"],"sourcesContent":["import { isAuthenticated, isAdmin } from \"./api.js\";\r\n\r\n/**\r\n * Check if user is authenticated and has admin role\r\n * @returns {boolean} True if user is authenticated and has admin role\r\n */\r\nexport const checkAdminAuth = () => {\r\n  return isAuthenticated() && isAdmin();\r\n};\r\n\r\n/**\r\n * Redirect user if not authenticated or not admin\r\n * @param {Function} router - Next.js router instance\r\n * @returns {boolean} True if user should continue, false if redirected\r\n */\r\nexport const requireAdminAuth = (router) => {\r\n  if (!isAuthenticated()) {\r\n    router.push(\"/admin/login\");\r\n    return false;\r\n  }\r\n\r\n  if (!isAdmin()) {\r\n    router.push(\"/admin/login\");\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Get admin user data with role verification\r\n * @returns {Object|null} User data if admin, null otherwise\r\n */\r\nexport const getAdminUser = () => {\r\n  if (!checkAdminAuth()) {\r\n    return null;\r\n  }\r\n\r\n  const userStr = localStorage.getItem(\"admin_user\");\r\n  return userStr ? JSON.parse(userStr) : null;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;;AAMO,MAAM,iBAAiB;IAC5B,OAAO,CAAA,GAAA,6GAAA,CAAA,kBAAe,AAAD,OAAO,CAAA,GAAA,6GAAA,CAAA,UAAO,AAAD;AACpC;AAOO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,6GAAA,CAAA,kBAAe,AAAD,KAAK;QACtB,OAAO,IAAI,CAAC;QACZ,OAAO;IACT;IAEA,IAAI,CAAC,CAAA,GAAA,6GAAA,CAAA,UAAO,AAAD,KAAK;QACd,OAAO,IAAI,CAAC;QACZ,OAAO;IACT;IAEA,OAAO;AACT;AAMO,MAAM,eAAe;IAC1B,IAAI,CAAC,kBAAkB;QACrB,OAAO;IACT;IAEA,MAAM,UAAU,aAAa,OAAO,CAAC;IACrC,OAAO,UAAU,KAAK,KAAK,CAAC,WAAW;AACzC","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/app/admin/posts/create/page.js"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useLanguage } from \"@/components/LanguageProvider\";\r\nimport { postsAPI } from \"@/lib/postsApi\";\r\nimport { requireAdminAuth } from \"@/lib/adminAuth\";\r\n\r\nexport default function CreatePostPage() {\r\n  const router = useRouter();\r\n  const { t } = useLanguage();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    CategoryId: \"\",\r\n    Translations: [\r\n      {\r\n        LanguageCode: 2, // English by default\r\n        Title: \"\",\r\n        Content: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!requireAdminAuth(router)) {\r\n      return;\r\n    }\r\n    // TODO: Load categories\r\n    loadCategories();\r\n  }, [router]);\r\n\r\n  const loadCategories = async () => {\r\n    // TODO: Implement categories API\r\n    setCategories([\r\n      { Id: \"1\", Name: \"Institute News\" },\r\n      { Id: \"2\", Name: \"Events\" },\r\n      { Id: \"3\", Name: \"Announcements\" },\r\n    ]);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTranslationChange = (index, field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      Translations: prev.Translations.map((trans, i) =>\r\n        i === index ? { ...trans, [field]: value } : trans\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const addTranslation = () => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      Translations: [\r\n        ...prev.Translations,\r\n        {\r\n          LanguageCode: 2,\r\n          Title: \"\",\r\n          Content: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const removeTranslation = (index) => {\r\n    if (formData.Translations.length > 1) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        Translations: prev.Translations.filter((_, i) => i !== index),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await postsAPI.createPost(formData);\r\n      if (response.Result) {\r\n        router.push(\"/admin/posts\");\r\n      } else {\r\n        setError(response.Message || \"Failed to create post\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating post:\", error);\r\n      setError(\"Failed to create post\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const languages = [\r\n    { code: 1, name: \"Arabic\" },\r\n    { code: 2, name: \"English\" },\r\n    { code: 3, name: \"French\" },\r\n    { code: 4, name: \"German\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => router.push(\"/admin/posts\")}\r\n                className=\"mr-4 text-gray-600 hover:text-gray-900\"\r\n              >\r\n                ← Back to Posts\r\n              </button>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                Create New Post\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-4xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Error Message */}\r\n            {error && (\r\n              <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            {/* Category Selection */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Category *\r\n              </label>\r\n              <select\r\n                name=\"CategoryId\"\r\n                value={formData.CategoryId}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"admin-input\"\r\n              >\r\n                <option value=\"\">Select a category</option>\r\n                {categories.map((category) => (\r\n                  <option key={category.Id} value={category.Id}>\r\n                    {category.Name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Translations */}\r\n            <div>\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">\r\n                  Post Content\r\n                </h3>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={addTranslation}\r\n                  className=\"admin-button admin-button-secondary\"\r\n                >\r\n                  Add Language\r\n                </button>\r\n              </div>\r\n\r\n              {formData.Translations.map((translation, index) => (\r\n                <div key={index} className=\"admin-card p-6 mb-4\">\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h4 className=\"text-md font-medium text-gray-900\">\r\n                      Translation {index + 1}\r\n                    </h4>\r\n                    {formData.Translations.length > 1 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeTranslation(index)}\r\n                        className=\"text-red-600 hover:text-red-900\"\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 gap-4\">\r\n                    {/* Language Selection */}\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Language *\r\n                      </label>\r\n                      <select\r\n                        value={translation.LanguageCode}\r\n                        onChange={(e) =>\r\n                          handleTranslationChange(\r\n                            index,\r\n                            \"LanguageCode\",\r\n                            parseInt(e.target.value)\r\n                          )\r\n                        }\r\n                        required\r\n                        className=\"admin-input\"\r\n                      >\r\n                        {languages.map((lang) => (\r\n                          <option key={lang.code} value={lang.code}>\r\n                            {lang.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n\r\n                    {/* Title */}\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Title *\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={translation.Title}\r\n                        onChange={(e) =>\r\n                          handleTranslationChange(\r\n                            index,\r\n                            \"Title\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        required\r\n                        className=\"admin-input\"\r\n                        placeholder=\"Enter post title\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Content */}\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Content *\r\n                      </label>\r\n                      <textarea\r\n                        value={translation.Content}\r\n                        onChange={(e) =>\r\n                          handleTranslationChange(\r\n                            index,\r\n                            \"Content\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        required\r\n                        rows={8}\r\n                        className=\"admin-input\"\r\n                        placeholder=\"Enter post content (HTML supported)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Submit Buttons */}\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => router.push(\"/admin/posts\")}\r\n                className=\"admin-button admin-button-secondary\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"admin-button admin-button-primary\"\r\n              >\r\n                {loading ? \"Creating...\" : \"Create Post\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}