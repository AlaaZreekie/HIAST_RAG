{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/lib/postsApi.js"],"sourcesContent":["const API_BASE_URL =\r\n  process.env.NEXT_PUBLIC_API_URL || \"https://localhost:7187/api\";\r\n\r\n// Generic API request function for posts\r\nasync function postsApiRequest(endpoint, options = {}) {\r\n  const url = `${API_BASE_URL}/admin/posts${endpoint}`;\r\n\r\n  const defaultOptions = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Add authorization header if token exists\r\n  const token = localStorage.getItem(\"admin_token\");\r\n  if (token) {\r\n    defaultOptions.headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  // Check if user is admin before making request\r\n  const { isAdmin } = await import(\"./api.js\");\r\n  if (!isAdmin()) {\r\n    throw new Error(\"Access denied. Admin role required.\");\r\n  }\r\n\r\n  const config = {\r\n    ...defaultOptions,\r\n    ...options,\r\n    headers: {\r\n      ...defaultOptions.headers,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log(\"Making Posts API request to:\", url);\r\n    const response = await fetch(url, config);\r\n    console.log(\"Response status:\", response.status);\r\n    const data = await response.json();\r\n    console.log(\"Response data:\", data);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.Message || \"API request failed\");\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Posts API Error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Posts API functions\r\nexport const postsAPI = {\r\n  // Get all posts\r\n  async getAllPosts() {\r\n    const response = await postsApiRequest(\"/GetAllPosts\", {\r\n      method: \"GET\",\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Create new post\r\n  async createPost(postData) {\r\n    const response = await postsApiRequest(\"/CreatePost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(postData),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Update existing post\r\n  async updatePost(postData) {\r\n    const response = await postsApiRequest(\"/UpdatePost\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(postData),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Delete post\r\n  async deletePost(postId) {\r\n    const response = await postsApiRequest(\"/DeletePost\", {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify({ Id: postId }),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Add post translation\r\n  async addPostTranslation(translationData) {\r\n    const response = await postsApiRequest(\"/AddPostTranslation\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(translationData),\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get posts by filter\r\n  async getPostsByFilter(filterData) {\r\n    const queryParams = new URLSearchParams();\r\n    Object.keys(filterData).forEach((key) => {\r\n      if (filterData[key] !== null && filterData[key] !== undefined) {\r\n        queryParams.append(key, filterData[key]);\r\n      }\r\n    });\r\n\r\n    const response = await postsApiRequest(\r\n      `/GetByFilter?${queryParams.toString()}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    );\r\n    return response;\r\n  },\r\n};\r\n\r\n// Helper functions\r\nexport const formatPostDate = (dateString) => {\r\n  return new Date(dateString).toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  });\r\n};\r\n\r\nexport const getLanguageName = (languageCode) => {\r\n  const languages = {\r\n    1: \"Arabic\",\r\n    2: \"English\",\r\n    3: \"French\",\r\n    4: \"German\",\r\n  };\r\n  return languages[languageCode] || \"Unknown\";\r\n};\r\n\r\nexport const getLanguageCode = (languageName) => {\r\n  const codes = {\r\n    Arabic: 1,\r\n    English: 2,\r\n    French: 3,\r\n    German: 4,\r\n  };\r\n  return codes[languageName] || 2; // Default to English\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/lib/api.js"],"sourcesContent":["const API_BASE_URL =\r\n  process.env.NEXT_PUBLIC_API_URL || \"https://localhost:7187/api\";\r\n\r\n// API Response wrapper\r\nclass ApiResponse {\r\n  constructor(success, message, statusCode, data) {\r\n    this.success = success;\r\n    this.message = message;\r\n    this.statusCode = statusCode;\r\n    this.data = data;\r\n  }\r\n}\r\n\r\n// Generic API request function\r\nexport async function apiRequest(endpoint, options = {}) {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n\r\n  const defaultOptions = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Add authorization header if token exists\r\n  const token = localStorage.getItem(\"admin_token\");\r\n  if (token) {\r\n    defaultOptions.headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  const config = {\r\n    ...defaultOptions,\r\n    ...options,\r\n    headers: {\r\n      ...defaultOptions.headers,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log(\"Making API request to:\", url);\r\n    console.log(\"Request config:\", config);\r\n    const response = await fetch(url, config);\r\n    console.log(\"Response status:\", response.status);\r\n    console.log(\"Response headers:\", response.headers);\r\n\r\n    const text = await response.text();\r\n    console.log(\"Raw response text:\", text);\r\n\r\n    let data = null;\r\n    try {\r\n      data = text ? JSON.parse(text) : null;\r\n      // If the result is a string (double-encoded), parse again\r\n      if (typeof data === \"string\") {\r\n        data = JSON.parse(data);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"JSON parsing error:\", e);\r\n      data = null;\r\n    }\r\n    console.log(\"Parsed response data:\", data);\r\n\r\n    if (!response.ok) {\r\n      const errorMessage =\r\n        (data && (data.Message || data.message)) ||\r\n        `HTTP ${response.status}: ${response.statusText}`;\r\n      console.error(\"API request failed:\", {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        url: url,\r\n        data: data,\r\n        errorMessage: errorMessage,\r\n      });\r\n      throw new Error(errorMessage);\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Authentication API functions\r\nexport const authAPI = {\r\n  // Login user\r\n  async login(email, password, rememberMe = false) {\r\n    const response = await apiRequest(\"/auth/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Email: email,\r\n        Password: password,\r\n        RememberMe: rememberMe,\r\n      }),\r\n    });\r\n\r\n    console.log(\"Login response:\", response);\r\n    // Handle the actual backend response structure\r\n    if (response.Result && response.Data?.Token?.Token) {\r\n      localStorage.setItem(\"admin_token\", response.Data.Token.Token);\r\n      console.log(\"Token set:\", response.Data.Token.Token);\r\n      localStorage.setItem(\"admin_user\", JSON.stringify(response.Data));\r\n    } else {\r\n      console.log(\"Login failed - response structure:\", {\r\n        result: response.Result,\r\n        hasData: !!response.Data,\r\n        hasToken: !!response.Data?.Token,\r\n        hasTokenToken: !!response.Data?.Token?.Token,\r\n      });\r\n    }\r\n\r\n    return response;\r\n  },\r\n\r\n  // Logout user\r\n  async logout() {\r\n    try {\r\n      await apiRequest(\"/Auth/Logout\", {\r\n        method: \"POST\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    } finally {\r\n      localStorage.removeItem(\"admin_token\");\r\n      localStorage.removeItem(\"admin_user\");\r\n    }\r\n  },\r\n\r\n  // Get current authenticated user\r\n  async getCurrentUser() {\r\n    return await apiRequest(\"/auth/GetAuthenticatedUser\", {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n\r\n  // Register new user (if needed)\r\n  async register(username, email, password) {\r\n    return await apiRequest(\"/auth/register\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Username: username,\r\n        Email: email,\r\n        Password: password,\r\n      }),\r\n    });\r\n  },\r\n};\r\n\r\n// Check if user is authenticated\r\nexport const isAuthenticated = () => {\r\n  const token = localStorage.getItem(\"admin_token\");\r\n  return !!token;\r\n};\r\n\r\n// Get current user from localStorage\r\nexport const getCurrentUserFromStorage = () => {\r\n  const userStr = localStorage.getItem(\"admin_user\");\r\n  return userStr ? JSON.parse(userStr) : null;\r\n};\r\n\r\n// Check if user has admin role\r\nexport const isAdmin = () => {\r\n  const user = getCurrentUserFromStorage();\r\n  return user?.Token?.UserRoles?.includes(\"Admin\") || false;\r\n};\r\n\r\n// Clear authentication data\r\nexport const clearAuth = () => {\r\n  localStorage.removeItem(\"admin_token\");\r\n  localStorage.removeItem(\"admin_user\");\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/lib/adminAuth.js"],"sourcesContent":["import { isAuthenticated, isAdmin } from \"./api.js\";\r\n\r\n/**\r\n * Check if user is authenticated and has admin role\r\n * @returns {boolean} True if user is authenticated and has admin role\r\n */\r\nexport const checkAdminAuth = () => {\r\n  return isAuthenticated() && isAdmin();\r\n};\r\n\r\n/**\r\n * Redirect user if not authenticated or not admin\r\n * @param {Function} router - Next.js router instance\r\n * @returns {boolean} True if user should continue, false if redirected\r\n */\r\nexport const requireAdminAuth = (router) => {\r\n  if (!isAuthenticated()) {\r\n    router.push(\"/admin/login\");\r\n    return false;\r\n  }\r\n\r\n  if (!isAdmin()) {\r\n    router.push(\"/admin/login\");\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Get admin user data with role verification\r\n * @returns {Object|null} User data if admin, null otherwise\r\n */\r\nexport const getAdminUser = () => {\r\n  if (!checkAdminAuth()) {\r\n    return null;\r\n  }\r\n\r\n  const userStr = localStorage.getItem(\"admin_user\");\r\n  return userStr ? JSON.parse(userStr) : null;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;;AAMO,MAAM,iBAAiB;IAC5B,OAAO,CAAA,GAAA,6GAAA,CAAA,kBAAe,AAAD,OAAO,CAAA,GAAA,6GAAA,CAAA,UAAO,AAAD;AACpC;AAOO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,6GAAA,CAAA,kBAAe,AAAD,KAAK;QACtB,OAAO,IAAI,CAAC;QACZ,OAAO;IACT;IAEA,IAAI,CAAC,CAAA,GAAA,6GAAA,CAAA,UAAO,AAAD,KAAK;QACd,OAAO,IAAI,CAAC;QACZ,OAAO;IACT;IAEA,OAAO;AACT;AAMO,MAAM,eAAe;IAC1B,IAAI,CAAC,kBAAkB;QACrB,OAAO;IACT;IAEA,MAAM,UAAU,aAAa,OAAO,CAAC;IACrC,OAAO,UAAU,KAAK,KAAK,CAAC,WAAW;AACzC","debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/app/admin/posts/page.js"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useLanguage } from \"@/components/LanguageProvider\";\r\nimport {\r\n  postsAPI,\r\n  formatPostDate,\r\n  getLanguageName,\r\n  getLanguageCode,\r\n} from \"@/lib/postsApi\";\r\nimport { requireAdminAuth } from \"@/lib/adminAuth\";\r\n\r\nexport default function PostsManagementPage() {\r\n  const router = useRouter();\r\n  const { t, lang } = useLanguage();\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [postToDelete, setPostToDelete] = useState(null);\r\n\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [totalPosts, setTotalPosts] = useState(0);\r\n  const [postsPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    if (!requireAdminAuth(router)) {\r\n      return;\r\n    }\r\n    loadPosts();\r\n  }, [router]);\r\n\r\n  // Reset pagination when language changes\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [lang]);\r\n\r\n  const loadPosts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await postsAPI.getAllPosts();\r\n      if (response.Result) {\r\n        const allPosts = response.Data || [];\r\n\r\n        // Filter posts by current language\r\n        const currentLanguageCode = getLanguageCode(\r\n          lang === \"ar\" ? \"Arabic\" : \"English\"\r\n        );\r\n        const filteredPosts = allPosts.filter((post) =>\r\n          post.Translations?.some(\r\n            (trans) => trans.LanguageCode === currentLanguageCode\r\n          )\r\n        );\r\n\r\n        setPosts(filteredPosts);\r\n        setTotalPosts(filteredPosts.length);\r\n        setTotalPages(Math.ceil(filteredPosts.length / postsPerPage));\r\n      } else {\r\n        setError(response.Message || \"Failed to load posts\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading posts:\", error);\r\n      setError(\"Failed to load posts\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!postToDelete) return;\r\n\r\n    try {\r\n      const response = await postsAPI.deletePost(postToDelete.Id);\r\n      if (response.Result) {\r\n        setPosts(posts.filter((post) => post.Id !== postToDelete.Id));\r\n        setShowDeleteModal(false);\r\n        setPostToDelete(null);\r\n      } else {\r\n        setError(response.Message || \"Failed to delete post\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error);\r\n      setError(\"Failed to delete post\");\r\n    }\r\n  };\r\n\r\n  // Get current language posts\r\n  const currentLanguageCode = getLanguageCode(\r\n    lang === \"ar\" ? \"Arabic\" : \"English\"\r\n  );\r\n  const currentLanguagePosts = posts.filter((post) =>\r\n    post.Translations?.some(\r\n      (trans) => trans.LanguageCode === currentLanguageCode\r\n    )\r\n  );\r\n\r\n  // Apply search and category filters\r\n  const filteredPosts = currentLanguagePosts.filter((post) => {\r\n    const matchesSearch =\r\n      !searchTerm ||\r\n      post.Translations?.some(\r\n        (trans) =>\r\n          trans.LanguageCode === currentLanguageCode &&\r\n          trans.Title?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    const matchesCategory =\r\n      !selectedCategory || post.Category?.Id === selectedCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  // Pagination logic\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading posts...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => router.push(\"/admin/dashboard\")}\r\n                className=\"mr-4 text-gray-600 hover:text-gray-900\"\r\n              >\r\n                ← Back to Dashboard\r\n              </button>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                  Posts Management\r\n                </h1>\r\n                <p className=\"text-sm text-gray-600 mt-1\">\r\n                  Showing posts in {lang === \"ar\" ? \"Arabic\" : \"English\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => router.push(\"/admin/posts/create\")}\r\n              className=\"admin-button admin-button-primary\"\r\n            >\r\n              Create New Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          {/* Search and Filters */}\r\n          <div className=\"mb-6 flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search posts by title...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"admin-input\"\r\n              />\r\n            </div>\r\n            <div className=\"sm:w-48\">\r\n              <select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                className=\"admin-input\"\r\n              >\r\n                <option value=\"\">All Categories</option>\r\n                {/* Categories will be loaded here */}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"mb-4 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {/* Posts Table */}\r\n          <div className=\"admin-card overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Title\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Category\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Author\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Published\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Languages\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {currentPosts.map((post) => (\r\n                    <tr key={post.Id} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">\r\n                          {post.Translations?.find(\r\n                            (trans) =>\r\n                              trans.LanguageCode === currentLanguageCode\r\n                          )?.Title || \"No title\"}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {post.Category?.Translations?.[0]?.Name ||\r\n                            \"Uncategorized\"}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {post.AuthorName || \"Unknown\"}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {formatPostDate(post.PublicationDate)}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex space-x-1\">\r\n                          {post.Translations?.map((trans, index) => (\r\n                            <span\r\n                              key={index}\r\n                              className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\r\n                            >\r\n                              {getLanguageName(trans.LanguageCode)}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <div className=\"flex space-x-2\">\r\n                          <button\r\n                            onClick={() =>\r\n                              router.push(`/admin/posts/edit/${post.Id}`)\r\n                            }\r\n                            className=\"text-blue-600 hover:text-blue-900\"\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              setPostToDelete(post);\r\n                              setShowDeleteModal(true);\r\n                            }}\r\n                            className=\"text-red-600 hover:text-red-900\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pagination Info */}\r\n          <div className=\"mb-4 flex justify-between items-center text-sm text-gray-700\">\r\n            <div>\r\n              Showing {indexOfFirstPost + 1} to{\" \"}\r\n              {Math.min(indexOfLastPost, filteredPosts.length)} of{\" \"}\r\n              {filteredPosts.length} posts\r\n            </div>\r\n            <div>\r\n              Page {currentPage} of {totalPages}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pagination Controls */}\r\n          {totalPages > 1 && (\r\n            <div className=\"mb-4 flex justify-center\">\r\n              <nav className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map(\r\n                  (page) => (\r\n                    <button\r\n                      key={page}\r\n                      onClick={() => handlePageChange(page)}\r\n                      className={`px-3 py-2 text-sm font-medium rounded-md ${\r\n                        currentPage === page\r\n                          ? \"bg-blue-600 text-white\"\r\n                          : \"text-gray-500 bg-white border border-gray-300 hover:bg-gray-50\"\r\n                      }`}\r\n                    >\r\n                      {page}\r\n                    </button>\r\n                  )\r\n                )}\r\n\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </nav>\r\n            </div>\r\n          )}\r\n\r\n          {/* Empty State */}\r\n          {currentPosts.length === 0 && !loading && (\r\n            <div className=\"text-center py-12\">\r\n              <div className=\"text-gray-500\">\r\n                <svg\r\n                  className=\"mx-auto h-12 w-12 text-gray-400\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\r\n                  />\r\n                </svg>\r\n                <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\r\n                  No posts found\r\n                </h3>\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                  Get started by creating a new post.\r\n                </p>\r\n                <div className=\"mt-6\">\r\n                  <button\r\n                    onClick={() => router.push(\"/admin/posts/create\")}\r\n                    className=\"admin-button admin-button-primary\"\r\n                  >\r\n                    Create New Post\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {showDeleteModal && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n            <div className=\"mt-3 text-center\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Delete Post</h3>\r\n              <div className=\"mt-2 px-7 py-3\">\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Are you sure you want to delete &quot;\r\n                  {postToDelete?.Translations?.[0]?.Title}&quot;? This action cannot\r\n                  be undone.\r\n                </p>\r\n              </div>\r\n              <div className=\"items-center px-4 py-3\">\r\n                <button\r\n                  onClick={handleDelete}\r\n                  className=\"px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-24 mr-2 hover:bg-red-600\"\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowDeleteModal(false);\r\n                    setPostToDelete(null);\r\n                  }}\r\n                  className=\"px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-md w-24 hover:bg-gray-600\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}