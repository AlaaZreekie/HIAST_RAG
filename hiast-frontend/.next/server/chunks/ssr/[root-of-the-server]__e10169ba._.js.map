{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/lib/api.js"],"sourcesContent":["const API_BASE_URL =\n  process.env.NEXT_PUBLIC_API_URL || \"https://localhost:7187/api\";\n\n// API Response wrapper\nclass ApiResponse {\n  constructor(success, message, statusCode, data) {\n    this.success = success;\n    this.message = message;\n    this.statusCode = statusCode;\n    this.data = data;\n  }\n}\n\n// Generic API request function\nexport async function apiRequest(endpoint, options = {}) {\n  const url = `${API_BASE_URL}${endpoint}`;\n\n  const defaultOptions = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Add authorization header if token exists\n  const token = localStorage.getItem(\"admin_token\");\n  if (token) {\n    defaultOptions.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const config = {\n    ...defaultOptions,\n    ...options,\n    headers: {\n      ...defaultOptions.headers,\n      ...options.headers,\n    },\n  };\n\n  try {\n    console.log(\"Making API request to:\", url);\n    console.log(\"Request config:\", config);\n    const response = await fetch(url, config);\n    console.log(\"Response status:\", response.status);\n    console.log(\"Response headers:\", response.headers);\n\n    const text = await response.text();\n    console.log(\"Raw response text:\", text);\n\n    let data = null;\n    try {\n      data = text ? JSON.parse(text) : null;\n      // If the result is a string (double-encoded), parse again\n      if (typeof data === \"string\") {\n        data = JSON.parse(data);\n      }\n    } catch (e) {\n      console.error(\"JSON parsing error:\", e);\n      data = null;\n    }\n    console.log(\"Parsed response data:\", data);\n\n    if (!response.ok) {\n      const errorMessage =\n        (data && (data.Message || data.message)) ||\n        `HTTP ${response.status}: ${response.statusText}`;\n      console.error(\"API request failed:\", {\n        status: response.status,\n        statusText: response.statusText,\n        url: url,\n        data: data,\n        errorMessage: errorMessage,\n      });\n      throw new Error(errorMessage);\n    }\n\n    return data;\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    throw error;\n  }\n}\n\n// Authentication API functions\nexport const authAPI = {\n  // Login user\n  async login(email, password, rememberMe = false) {\n    const response = await apiRequest(\"/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        Email: email,\n        Password: password,\n        RememberMe: rememberMe,\n      }),\n    });\n\n    console.log(\"Login response:\", response);\n    // Handle the actual backend response structure\n    if (response.Result && response.Data?.Token?.Token) {\n      localStorage.setItem(\"admin_token\", response.Data.Token.Token);\n      console.log(\"Token set:\", response.Data.Token.Token);\n      localStorage.setItem(\"admin_user\", JSON.stringify(response.Data));\n    } else {\n      console.log(\"Login failed - response structure:\", {\n        result: response.Result,\n        hasData: !!response.Data,\n        hasToken: !!response.Data?.Token,\n        hasTokenToken: !!response.Data?.Token?.Token,\n      });\n    }\n\n    return response;\n  },\n\n  // Logout user\n  async logout() {\n    try {\n      await apiRequest(\"/Auth/Logout\", {\n        method: \"POST\",\n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"admin_token\");\n      localStorage.removeItem(\"admin_user\");\n    }\n  },\n\n  // Get current authenticated user\n  async getCurrentUser() {\n    return await apiRequest(\"/auth/GetAuthenticatedUser\", {\n      method: \"GET\",\n    });\n  },\n\n  // Register new user (if needed)\n  async register(username, email, password) {\n    return await apiRequest(\"/auth/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        Username: username,\n        Email: email,\n        Password: password,\n      }),\n    });\n  },\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"admin_token\");\n  return !!token;\n};\n\n// Get current user from localStorage\nexport const getCurrentUserFromStorage = () => {\n  const userStr = localStorage.getItem(\"admin_user\");\n  return userStr ? JSON.parse(userStr) : null;\n};\n\n// Check if user has admin role\nexport const isAdmin = () => {\n  const user = getCurrentUserFromStorage();\n  return user?.Token?.UserRoles?.includes(\"Admin\") || false;\n};\n\n// Clear authentication data\nexport const clearAuth = () => {\n  localStorage.removeItem(\"admin_token\");\n  localStorage.removeItem(\"admin_user\");\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/app/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/components/ui/Input.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { cn } from \"@/app/lib/utils\";\r\n\r\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={cn(\r\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input }; "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,qMAAA,CAAA,UAAK,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC7D,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEA,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/components/admin/LoginForm.jsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { authAPI } from \"@/lib/api\";\r\nimport { Input } from \"@/components/ui/Input\";\r\nimport { useLanguage } from \"@/components/LanguageProvider\";\r\n\r\nconst LoginForm = () => {\r\n  const router = useRouter();\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { t } = useLanguage();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!formData.email) {\r\n      setError(t(\"login.error.requiredEmail\"));\r\n      return false;\r\n    }\r\n    if (!formData.password) {\r\n      setError(t(\"login.error.requiredPassword\"));\r\n      return false;\r\n    }\r\n    if (!formData.email.includes(\"@\")) {\r\n      setError(t(\"login.error.invalidEmail\"));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await authAPI.login(\r\n        formData.email,\r\n        formData.password,\r\n        formData.rememberMe\r\n      );\r\n\r\n      console.log(\"Login response in form:\", response);\r\n      // Handle the actual backend response structure\r\n      if (response.Result && response.Data?.Token?.Token) {\r\n        // Redirect to admin dashboard\r\n        router.push(\"/admin/dashboard\");\r\n      } else {\r\n        setError(response.Message || t(\"login.error.loginFailed\"));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      setError(error.message || t(\"login.error.general\"));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-card p-8\">\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            {t(\"login.email\")}\r\n          </label>\r\n          <Input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            required\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            placeholder={t(\"login.placeholder.email\")}\r\n            disabled={isLoading}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            {t(\"login.password\")}\r\n          </label>\r\n          <div className=\"relative\">\r\n            <Input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              required\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              className=\"pr-10\"\r\n              placeholder={t(\"login.placeholder.password\")}\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n            >\r\n              {showPassword ? (\r\n                <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\r\n                </svg>\r\n              ) : (\r\n                <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                </svg>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              id=\"rememberMe\"\r\n              name=\"rememberMe\"\r\n              type=\"checkbox\"\r\n              checked={formData.rememberMe}\r\n              onChange={handleInputChange}\r\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n              disabled={isLoading}\r\n            />\r\n            <label htmlFor=\"rememberMe\" className=\"ml-2 block text-sm text-gray-700\">\r\n              {t(\"login.rememberMe\")}\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"admin-button admin-button-primary w-full flex justify-center items-center\"\r\n          >\r\n            {isLoading ? (\r\n              <>\r\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                {t(\"login.loading\")}\r\n              </>\r\n            ) : (\r\n              t(\"login.button\")\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"mt-6 text-center\">\r\n        <p className=\"text-sm text-gray-600\">\r\n          {t(\"login.support\")} {\" \"}\r\n          <a href=\"#\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n            {t(\"login.contactSupport\")}\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/components/ConnectionTest.jsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { authAPI } from \"@/lib/api\";\r\n\r\nconst ConnectionTest = () => {\r\n  const [testResult, setTestResult] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const testConnection = async () => {\r\n    setIsLoading(true);\r\n    setTestResult(\"Testing connection...\");\r\n    \r\n    try {\r\n      // Test basic connection\r\n      const response = await fetch(\"http://localhost:5007/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          Email: \"test@test.com\",\r\n          Password: \"test123\",\r\n          RememberMe: false,\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      setTestResult(`\r\n        Status: ${response.status}\r\n        OK: ${response.ok}\r\n        Result: ${data.Result}\r\n        Message: ${data.Message}\r\n        Has Data: ${!!data.Data}\r\n        Has Token: ${!!data.Data?.Token}\r\n        Has Token Token: ${!!data.Data?.Token?.Token}\r\n        Full Response: ${JSON.stringify(data, null, 2)}\r\n      `);\r\n    } catch (error) {\r\n      setTestResult(`Error: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded\">\r\n      <h3 className=\"text-lg font-bold mb-4\">API Connection Test</h3>\r\n      <button \r\n        onClick={testConnection}\r\n        disabled={isLoading}\r\n        className=\"px-4 py-2 bg-blue-500 text-white rounded disabled:opacity-50\"\r\n      >\r\n        {isLoading ? \"Testing...\" : \"Test Connection\"}\r\n      </button>\r\n      {testResult && (\r\n        <pre className=\"mt-4 p-2 bg-gray-100 rounded text-sm overflow-auto\">\r\n          {testResult}\r\n        </pre>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionTest; "],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,MAAM,iBAAiB;IACrB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,iBAAiB;QACrB,aAAa;QACb,cAAc;QAEd,IAAI;YACF,wBAAwB;YACxB,MAAM,WAAW,MAAM,MAAM,wCAAwC;gBACnE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,OAAO;oBACP,UAAU;oBACV,YAAY;gBACd;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,cAAc,CAAC;gBACL,EAAE,SAAS,MAAM,CAAC;YACtB,EAAE,SAAS,EAAE,CAAC;gBACV,EAAE,KAAK,MAAM,CAAC;iBACb,EAAE,KAAK,OAAO,CAAC;kBACd,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC;mBACb,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,MAAM;yBACf,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,MAAM;uBAC9B,EAAE,KAAK,SAAS,CAAC,MAAM,MAAM,GAAG;MACjD,CAAC;QACH,EAAE,OAAO,OAAO;YACd,cAAc,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;QACzC,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;gBACC,SAAS;gBACT,UAAU;gBACV,WAAU;0BAET,YAAY,eAAe;;;;;;YAE7B,4BACC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAKX;uCAEe","debugId":null}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/components/admin/LanguageSwitcher.jsx"],"sourcesContent":["\"use client\";\r\nimport { useLanguage } from \"@/components/LanguageProvider\";\r\n\r\nconst LanguageSwitcher = () => {\r\n  const { lang, setLang, t } = useLanguage();\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      {lang === \"ar\" ? (\r\n        <>\r\n          <select\r\n            value={lang}\r\n            onChange={(e) => setLang(e.target.value)}\r\n            className=\"px-3 py-2 rounded-md border border-gray-300 bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n          >\r\n            <option value=\"ar\">العربية</option>\r\n            <option value=\"en\">English</option>\r\n          </select>\r\n          <span className=\"text-sm text-gray-600\">\r\n            {`:${t(\"language.switch\")}`}\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span className=\"text-sm text-gray-600\">\r\n            {`${t(\"language.switch\")}:`}\r\n          </span>\r\n          <select\r\n            value={lang}\r\n            onChange={(e) => setLang(e.target.value)}\r\n            className=\"px-3 py-2 rounded-md border border-gray-300 bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n          >\r\n            <option value=\"ar\">العربية</option>\r\n            <option value=\"en\">English</option>\r\n          </select>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher; "],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,mBAAmB;IACvB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,cAAW,AAAD;IAEvC,qBACE,8OAAC;QAAI,WAAU;kBACZ,SAAS,qBACR;;8BACE,8OAAC;oBACC,OAAO;oBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oBACvC,WAAU;;sCAEV,8OAAC;4BAAO,OAAM;sCAAK;;;;;;sCACnB,8OAAC;4BAAO,OAAM;sCAAK;;;;;;;;;;;;8BAErB,8OAAC;oBAAK,WAAU;8BACb,CAAC,CAAC,EAAE,EAAE,oBAAoB;;;;;;;yCAI/B;;8BACE,8OAAC;oBAAK,WAAU;8BACb,GAAG,EAAE,mBAAmB,CAAC,CAAC;;;;;;8BAE7B,8OAAC;oBACC,OAAO;oBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oBACvC,WAAU;;sCAEV,8OAAC;4BAAO,OAAM;sCAAK;;;;;;sCACnB,8OAAC;4BAAO,OAAM;sCAAK;;;;;;;;;;;;;;;;;;;AAM/B;uCAEe","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/source/repos/HIAST_RAG/ForthYear/hiast-frontend/app/admin/login/page.js"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport LoginForm from \"@/components/admin/LoginForm\";\r\nimport ConnectionTest from \"@/components/ConnectionTest\";\r\nimport { useLanguage } from \"@/components/LanguageProvider\";\r\nimport LanguageSwitcher from \"@/components/admin/LanguageSwitcher\";\r\n\r\nexport default function AdminLoginPage() {\r\n  const { t, lang } = useLanguage();\r\n\r\n  return (\r\n    <div\r\n      className={`min-h-screen flex items-center justify-center admin-gradient ${\r\n        lang === \"ar\" ? \"rtl\" : \"ltr\"\r\n      }`}\r\n    >\r\n      <LanguageSwitcher />\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div className=\"text-center\">\r\n          <div className=\"mx-auto h-16 w-16 bg-white rounded-full flex items-center justify-center shadow-lg\">\r\n            <svg\r\n              className=\"h-8 w-8 text-blue-600\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <h2 className=\"mt-6 text-3xl font-extrabold text-white\">\r\n            {t(\"login.dashboard.title\")}\r\n          </h2>\r\n          <p className=\"mt-2 text-sm text-blue-100\">{t(\"login.title\")}</p>\r\n          <p className=\"mt-1 text-xs text-blue-200\">{t(\"login.subtitle\")}</p>\r\n        </div>\r\n        <LoginForm />\r\n        <div className=\"mt-8\">\r\n          <ConnectionTest />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,cAAW,AAAD;IAE9B,qBACE,8OAAC;QACC,WAAW,CAAC,6DAA6D,EACvE,SAAS,OAAO,QAAQ,OACxB;;0BAEF,8OAAC,wIAAA,CAAA,UAAgB;;;;;0BACjB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,WAAU;oCACV,MAAK;oCACL,QAAO;oCACP,SAAQ;8CAER,cAAA,8OAAC;wCACC,eAAc;wCACd,gBAAe;wCACf,aAAa;wCACb,GAAE;;;;;;;;;;;;;;;;0CAIR,8OAAC;gCAAG,WAAU;0CACX,EAAE;;;;;;0CAEL,8OAAC;gCAAE,WAAU;0CAA8B,EAAE;;;;;;0CAC7C,8OAAC;gCAAE,WAAU;0CAA8B,EAAE;;;;;;;;;;;;kCAE/C,8OAAC,iIAAA,CAAA,UAAS;;;;;kCACV,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,6HAAA,CAAA,UAAc;;;;;;;;;;;;;;;;;;;;;;AAKzB","debugId":null}}]
}